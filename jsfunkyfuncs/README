JS Funky Function Tests
-----------------------

In context of JavaScript module/transport/packaging, you might find the
following language hypothesis interesting:

    func.toString() == eval('1,'+func.toString()).toString() 

... where func is your arbitrary javascript function

// note that the '1,'+ is there to coerces returning a value
//  (required for certain VMs' eval implementations)

This rather amazing "serialization feature" is a de facto standard across the
JavaScript space.  It works in all VMs and their downstream apps (that I can
get my hands on...)

To date:
 * Rhino
 * SpiderMonkey (Firefox, Mozilla)
 * JavaScriptCore (WebKit, Safari)
 * V8 (v8-shell)
 * JScript (WSH, IE, PIE)

A few caveats so far about this approach:

 1) code comments disappear in the serialization process
	(one workaround is to embed them as actual code constructs)
 2) SpiderMonkey (perhaps others) optimizes(?)-away several noops
	(in FF try javascript:alert(''+function(){"your favorite string noop";});
	 to see what I mean)
 3) serialization does not create code new compatibilities across VMs
	(that is, ES5 features will still not eval into ES3 containers)

Anyway, going to try out this technique for a portable modules and functional-
block system, letting the actual host containers involved (server, client,
command line, etc.) do all the heavy lifting.  Streaming and unstreaming
function sources just became a whole lot easier I think!

2010.01.22


